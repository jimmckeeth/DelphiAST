package DelphiASTVisualizers;

{$R *.res}
{$IFDEF IMPLICITBUILDING This IFDEF should not be used by users}
{$ALIGN 8}
{$ASSERTIONS ON}
{$BOOLEVAL OFF}
{$DEBUGINFO OFF}
{$EXTENDEDSYNTAX ON}
{$IMPORTEDDATA ON}
{$IOCHECKS ON}
{$LOCALSYMBOLS ON}
{$LONGSTRINGS ON}
{$OPENSTRINGS ON}
{$OPTIMIZATION OFF}
{$OVERFLOWCHECKS ON}
{$RANGECHECKS ON}
{$REFERENCEINFO ON}
{$SAFEDIVIDE OFF}
{$STACKFRAMES ON}
{$TYPEDADDRESS OFF}
{$VARSTRINGCHECKS ON}
{$WRITEABLECONST OFF}
{$MINENUMSIZE 1}
{$IMAGEBASE $400000}
{$DEFINE DEBUG}
{$ENDIF IMPLICITBUILDING}
{$IMPLICITBUILD ON}

requires
  rtl,
  designide;

contains
  SyntaxNodeVisualizer in 'SyntaxNodeVisualizer.pas',
  DelphiAST.Classes in '..\Source\DelphiAST.Classes.pas',
  DelphiAST.Consts in '..\Source\DelphiAST.Consts.pas',
  DelphiAST in '..\Source\DelphiAST.pas',
  DelphiAST.ProjectIndexer in '..\Source\DelphiAST.ProjectIndexer.pas',
  DelphiAST.Serialize.Binary in '..\Source\DelphiAST.Serialize.Binary.pas',
  DelphiAST.SimpleParserEx in '..\Source\DelphiAST.SimpleParserEx.pas',
  DelphiAST.Writer in '..\Source\DelphiAST.Writer.pas',
  StringPool in '..\Source\StringPool.pas',
  SimpleParser.Lexer in '..\Source\SimpleParser\SimpleParser.Lexer.pas',
  SimpleParser.Lexer.Types in '..\Source\SimpleParser\SimpleParser.Lexer.Types.pas',
  SimpleParser in '..\Source\SimpleParser\SimpleParser.pas',
  SimpleParser.Types in '..\Source\SimpleParser\SimpleParser.Types.pas';

end.
